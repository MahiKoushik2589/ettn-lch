import { Component, Input, OnInit } from '@angular/core';
import { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';

@Component({
  selector: 'app-purchase-training',
  templateUrl: './purchase-training.component.html',
  styleUrls: ['./purchase-training.component.scss']
})
export class PurchaseTrainingComponent implements OnInit {
  data: any;
  showRegisterOptions = false;
  registerSomeoneElseForm: FormGroup;
  selfRegistrationForm: FormGroup; // New form for self-registration

  constructor(private fb: FormBuilder) { }

  ngOnInit(): void {
    // Initialize form for registering someone else
    this.registerSomeoneElseForm = this.fb.group({
      person: this.fb.array([]) // Empty array to hold multiple persons
    });
    this.addMember();

    // Initialize form for self-registration
    this.selfRegistrationForm = this.fb.group({
      firstName: ['', Validators.required],
      lastName: ['', Validators.required],
      email: ['', [Validators.required, Validators.email]]
    });
  }

  // Methods for registering someone else
  get membersList(): FormArray {
    return this.registerSomeoneElseForm.get('person') as FormArray;
  }

  addMember(): void {
    const member = this.fb.group({
      firstName: ['', Validators.required],
      lasttName: ['', Validators.required],
      memberEmailId: ['', [Validators.required, Validators.email]]
    });

    this.membersList.push(member);
  }

  deleteMember(i: number): void {
    if (this.membersList.length > 1) {
      this.membersList.removeAt(i);
    }
  }

  // Method to log multiple users
  registerUsers(): void {
    if (this.registerSomeoneElseForm.valid) {
      const formData = this.registerSomeoneElseForm.value.person;
      console.log('Registered Users:', formData); // Logs multiple users
    } else {
      console.log('Form is invalid');
    }
  }

  // Method to log single user for self-registration
  registerMyself(): void {
    if (this.selfRegistrationForm.valid) {
      const formData = this.selfRegistrationForm.value;
      console.log('Self Registration:', formData); // Logs self-registration data
    } else {
      console.log('Self Registration Form is invalid');
    }
  }

  reload(): void {
    window.location.reload();
  }

  @Input()
  set json(input: string) {
    if (input) {
      this.data = JSON.parse(input);
    }
  }
}
